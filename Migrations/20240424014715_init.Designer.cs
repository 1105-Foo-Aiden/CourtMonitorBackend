// <auto-generated />
using System;
using CourtMonitorBackend.Services.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourtMonitorBackend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240424014715_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourtMonitorBackend.Models.CoachModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("ProgramID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramID");

                    b.HasIndex("UserID");

                    b.ToTable("CoachInfo");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.DTO.AdminModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProgramID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramID");

                    b.HasIndex("UserID");

                    b.ToTable("AdminInfo");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.DTO.EventModel", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<bool>("AllDay")
                        .HasColumnType("bit");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPulished")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramID")
                        .HasColumnType("int");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.HasIndex("ProgramID")
                        .IsUnique()
                        .HasFilter("[ProgramID] IS NOT NULL");

                    b.HasIndex("UserID");

                    b.ToTable("EventInfo");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.DTO.ProgramModel", b =>
                {
                    b.Property<int>("ProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramID"));

                    b.Property<int?>("AdminID")
                        .HasColumnType("int");

                    b.Property<int?>("CoachID")
                        .HasColumnType("int");

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<int?>("GenUserID")
                        .HasColumnType("int");

                    b.Property<string>("ProgramName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramSport")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramID");

                    b.HasIndex("AdminID");

                    b.HasIndex("CoachID");

                    b.HasIndex("GenUserID");

                    b.ToTable("ProgramInfo");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.GenUserModel", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("ProgramID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramID");

                    b.HasIndex("UserID");

                    b.ToTable("GenUserInfo");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.UserModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FunFact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCoach")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUser")
                        .HasColumnType("bit");

                    b.Property<string>("Programs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.CoachModel", b =>
                {
                    b.HasOne("CourtMonitorBackend.Models.DTO.ProgramModel", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramID");

                    b.HasOne("CourtMonitorBackend.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Program");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.DTO.AdminModel", b =>
                {
                    b.HasOne("CourtMonitorBackend.Models.DTO.ProgramModel", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramID");

                    b.HasOne("CourtMonitorBackend.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Program");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.DTO.EventModel", b =>
                {
                    b.HasOne("CourtMonitorBackend.Models.DTO.ProgramModel", "Program")
                        .WithOne("Event")
                        .HasForeignKey("CourtMonitorBackend.Models.DTO.EventModel", "ProgramID");

                    b.HasOne("CourtMonitorBackend.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Program");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.DTO.ProgramModel", b =>
                {
                    b.HasOne("CourtMonitorBackend.Models.DTO.AdminModel", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID");

                    b.HasOne("CourtMonitorBackend.Models.CoachModel", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachID");

                    b.HasOne("CourtMonitorBackend.Models.GenUserModel", "GenUser")
                        .WithMany()
                        .HasForeignKey("GenUserID");

                    b.Navigation("Admin");

                    b.Navigation("Coach");

                    b.Navigation("GenUser");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.GenUserModel", b =>
                {
                    b.HasOne("CourtMonitorBackend.Models.DTO.ProgramModel", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramID");

                    b.HasOne("CourtMonitorBackend.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Program");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourtMonitorBackend.Models.DTO.ProgramModel", b =>
                {
                    b.Navigation("Event");
                });
#pragma warning restore 612, 618
        }
    }
}
